name: CI/CD Pipeline for MyCarTeam

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Installation des dépendances
        run: |
          cd api
          npm install
          
      - name: Lancement des tests de l'API
        run: |
          cd api
          npm run test

  build-and-push:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Build de l'image Docker de l'API
        run: |
          docker build -f ./api/Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/api:latest ./api

      # --- Construction de l'image Frontend ---
      - name: Build de l'image Docker du Frontend
        run: |
          docker build --no-cache --build-arg NEXT_PUBLIC_API_BASE_URL=https://api.mycarteam.fr -f ./frontend/Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend

      # --- Authentification à Docker Hub ---
      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --- Pousser l'image API ---
      - name: Push de l'image Docker de l'API
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/api:latest

      # --- Pousser l'image Frontend ---
      - name: Push de l'image Docker du Frontend
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Déploiement sur DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Authentification Docker Hub
            docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

            # Télécharger les dernières images
            docker pull ${{ secrets.DOCKER_USERNAME }}/api:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest

            # Aller dans le dossier où se trouve votre docker-compose.yml sur le Droplet
            cd /root/myCarTeam

            # Redémarrer les services
            docker-compose down
            docker image prune -f
            docker-compose up -d --force-recreate
